// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum AccountRole {
  WAITING
  FREELANCE
  ADMIN
  
}
enum Type {
  SUBSIDI
  KOMERSIL
  KOST
  SEWA
}
enum Status_ {
  OPEN
  TERLARIS
  TERBARU
  FAVORIT
  FLASHSALE
}

model Account {
  id                 String  @id @default(cuid())
  name          String
  email         String   @unique
  whatsup       String   @unique
  payout        Int @default(0)
  password      String?
  role          AccountRole @default(WAITING)
  customers      Customer[]
  type               String @default("email")
  provider           String @default("gmail")
  providerAccountId  String 
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  @@unique([provider, providerAccountId])
}

model Customer {
  id          String @id @default(uuid())
  accountId      String
  name        String
  whatsup     String @unique
  email       String
  status      Status @default(FOLLOWUP)
  // produk      Produk[]
  createdAt   DateTime @default(now())
  acount Account? @relation(fields: [accountId], references: [id], onDelete: Cascade)
  @@index([accountId])
  
  products      Product[]  @relation("CustomerToProduct")
}


model Product {
  id          String @id @default(uuid())
  type  Type @default(SUBSIDI)
  status  Status_ @default(OPEN)
  district        String  @default("Poasia")
  name        String @unique
  rating Decimal
  address        String 
  price     Decimal 
  discountFrom     Decimal 
  fee     Decimal 
  image String
  fb     String 
  tiktok String
  createdAt   DateTime @default(now())
   customers   Customer[] @relation("CustomerToProduct")
}


model PasswordResetToken {
  id String @id @default(cuid())
  email String
  token String @unique
  expires DateTime

  @@unique([email, token])
}

enum Status {
  FOLLOWUP
  ONPROCESS
  SUCCESS
  CANCEL
}
  
